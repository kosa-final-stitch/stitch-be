<?xml version="1.0" encoding="UTF-8" ?>
<!-- 2024.9.16 박요한 | getTopRatedAcademies 추가 -->

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mywork.stitchbe.mapper.AcademyMapper">

	<!-- 학원 ID로 학원 정보 조회 -->
	<select id="getAcademyById"
		resultType="org.mywork.stitchbe.dto.AcademyDTO" parameterType="Long">
		SELECT * FROM academy WHERE academy_id = #{academyId}
	</select>

	<!-- 학원 ID로 해당 학원의 강의 목록 조회 -->
	<select id="getCoursesByAcademyId"
		resultType="org.mywork.stitchbe.dto.CourseDTO" parameterType="Long">
		SELECT * FROM course WHERE academy_id = #{academyId}
	</select>

	<!-- 전체 학원 목록 조회 -->
	<select id="getAllAcademy"
		resultType="org.mywork.stitchbe.dto.AcademyDTO">
		SELECT * FROM academy
	</select>


	<!-- 완료된 강의 목록 조회 -->
	<select id="findCompletedCourses"
		resultType="org.mywork.stitchbe.dto.CourseDTO">
		SELECT *
		FROM course
		WHERE academy_id = #{academyId}
		AND end_date <![CDATA[ < ]]> SYSDATE
		ORDER BY end_date DESC
	</select>


	<!-- 강의 리뷰 삽입 -->
	<insert id="insertCourseReview">
		INSERT INTO reviews (course_id, member_id, education, education_rating,
		instructor, instructor_rating, facility, facility_rating, atmosphere,
		atmosphere_rating, management, management_rating, later, later_rating,
		education_spec, employment_status, reg_date)
		VALUES (#{courseId}, #{review.memberId}, #{review.education},
		#{review.educationRating}, #{review.instructor},
		#{review.instructorRating}, #{review.facility},
		#{review.facilityRating}, #{review.atmosphere},
		#{review.atmosphereRating}, #{review.management},
		#{review.managementRating}, #{review.later}, #{review.laterRating},
		#{review.educationSpec}, #{review.employmentStatus}, NOW())
	</insert>

	<!-- 학원 별점 및 레이더 차트 데이터 조회 -->
	<select id="findAcademyRating" resultType="hashmap">
		SELECT
		ROUND(AVG(education_rating)) AS educationRating,
		ROUND(AVG(instructor_rating)) AS instructorRating,
		ROUND(AVG(facility_rating)) AS facilityRating,
		ROUND(AVG(atmosphere_rating)) AS atmosphereRating,
		ROUND(AVG(management_rating)) AS managementRating,
		ROUND(AVG(later_rating)) AS laterRating
		FROM reviews
		WHERE academy_id = #{academyId}
	</select>
	
	
	    <!-- 학원 ID로 평균 별점 조회 (정수로 반환) -->
    <select id="findAcademyAverageRating" resultType="Integer">
        SELECT 
            ROUND(AVG((r.education_rating + r.instructor_rating + r.facility_rating + 
                      r.atmosphere_rating + r.management_rating + r.later_rating) / 6)) 
        FROM review r
        JOIN course c ON r.course_id = c.course_id
        WHERE c.academy_id = #{academyId}
    </select>
	
	

  <!-- 홈: 학원과 리뷰 데이터를 조인해서 6개 항목별 평균 평점을 가져오는 쿼리 -->
  <select id="getTopRatedAcademies" resultType="org.mywork.stitchbe.dto.home.AcademyReviewDTO">
    SELECT
        a.academy_id as academyId, a.academy_name as academyName, a.address, a.phone,
        (SUM(r.education_rating) + SUM(r.instructor_rating) + SUM(r.facility_rating) +
         SUM(r.atmosphere_rating) + SUM(r.management_rating) + SUM(r.later_rating))
            / (COUNT(r.review_id) * 6) AS averageRating,
        AVG(r.education_rating) AS educationRating,
        AVG(r.instructor_rating) AS instructorRating,
        AVG(r.facility_rating) AS facilityRating,
        AVG(r.atmosphere_rating) AS atmosphereRating,
        AVG(r.management_rating) AS managementRating,
        AVG(r.later_rating) AS laterRating
    FROM academy a
             LEFT JOIN course c ON a.academy_id = c.academy_id
             LEFT JOIN review r ON c.course_id = r.course_id
    GROUP BY a.academy_id, a.academy_name, a.address, a.phone
    ORDER BY averageRating DESC NULLS LAST
        FETCH FIRST 5 ROWS ONLY
  </select>

</mapper>
